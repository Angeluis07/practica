$date
	Sun Jun 15 11:13:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module eje6_tb $end
$var wire 4 ! s_q_latch [3:0] $end
$var wire 4 " s_q [3:0] $end
$var reg 1 # enable $end
$var reg 1 $ s $end
$var reg 4 % s_b [3:0] $end
$var reg 4 & s_b_latch [3:0] $end
$var reg 4 ' s_b_prueba [0:3] $end
$var reg 1 ( s_clk $end
$scope module UUT $end
$var wire 4 ) b [3:0] $end
$var wire 1 ( clk $end
$var wire 4 * q [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 + i $end
$scope module ffd $end
$var wire 1 ( clk $end
$var wire 1 , d $end
$var reg 1 - q $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 . i $end
$scope module ffd $end
$var wire 1 ( clk $end
$var wire 1 / d $end
$var reg 1 0 q $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 1 i $end
$scope module ffd $end
$var wire 1 ( clk $end
$var wire 1 2 d $end
$var reg 1 3 q $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 4 i $end
$scope module ffd $end
$var wire 1 ( clk $end
$var wire 1 5 d $end
$var reg 1 6 q $end
$upscope $end
$upscope $end
$upscope $end
$scope module UUT_latch $end
$var wire 4 7 b [3:0] $end
$var wire 1 # enable $end
$var wire 4 8 q [3:0] $end
$scope begin genblk1[0] $end
$var parameter 2 9 j $end
$scope module ld $end
$var wire 1 : d $end
$var wire 1 # enable $end
$var reg 1 ; q $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 < j $end
$scope module ld $end
$var wire 1 = d $end
$var wire 1 # enable $end
$var reg 1 > q $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ? j $end
$scope module ld $end
$var wire 1 @ d $end
$var wire 1 # enable $end
$var reg 1 A q $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 B j $end
$scope module ld $end
$var wire 1 C d $end
$var wire 1 # enable $end
$var reg 1 D q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 B
b10 ?
b1 <
b0 9
b11 4
b10 1
b1 .
b0 +
$end
#0
$dumpvars
0D
1C
0A
0@
0>
1=
0;
0:
b0 8
b1010 7
06
15
03
02
00
1/
0-
0,
b0 *
b1010 )
0(
b1010 '
b1010 &
b1010 %
0$
0#
b0 "
b0 !
$end
#5000
1>
b1010 !
b1010 8
1D
10
b1010 "
b1010 *
16
1#
1(
#10000
